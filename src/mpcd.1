.TH MPCD 1 2023-05-22
.SH NAME
\fBmpcd\fR \(en report code clones
.SH SYNOPSIS
\fBmpcd\fR [\fB\-jv\fR] [\fB\-n \fIclone-length\fR]
.SH DESCRIPTION
The \fBmpcd\fR utility reads from its standard input a stream
of file identifiers (e.g. file paths) prefixed with F,
followed by each file's
tokens for each line as integers in the range 0\^\(en\^4294967295 (2\u32\d \(en 1).
It reports on its standard output identified code clones.
Each clone is reported in the following format.
.RS
.TP
\(bu
One line containing the number of clones in the group and
the number of tokens in each group's element.
.TP
\(bu
One line for each clone group element containing
the start line, the end line, and the file identifier.
.TP
\(bu
A blank line.
.RE
All the above elements are tab-separated.


.SH OPTIONS
The behavior of the \fBmpcd\fR utility can be controlled
through the following command-line option.
.RS 3

.TP
.BI "-j "
Produce JSON rather than plain text output.

.TP
.BI "-n " clone-length
Specify the minimum length of clones that will be detected.
The default value is 15.

.TP
.BI "-v "
Produce verbose output on the standard error with processing details.

.RE

.SH EXAMPLES
.PP
Identify Type 1 (exact) clones in all Java files
located in the \fCsrc\fP directory and output them in JSON format.
The \fItokenizer\fP's
\fC-f\fP option is used to identify each output file and
the \fC-g\fP option to process all identifiers in the same (global) scope.


.ft C
.nf
# Obtain list of Java files in the src directory
find src -type f -name '*.java' |

# Tokenize files in paths coming from stdin, using the same scope for all ids
tokenizer -l Java -o line -i - -g -f |

# Identify clones
mpcd -j >results.json
.ft P
.fi

.PP
Find Type 2 (near) clones in the \fCkernel\fP directory
of the Linux kernel v6.3,
which is stored in a bare Git repository named \fClinux.git\fP.
The \fItokenizer\fP's
\fC-c\fP option is used to output the same token value for all identifiers.
Adjust clone size to 40 tokens and generate verbose output while processing.
The results are saved in textual format.

.ft C
.nf
git --git-dir linux.git ls-tree -r --name-only v6.3 -- kernel |
grep '\.[ch]$' |
while read file; do
  echo "F$file"
  git --git-dir linux.git show "v6.3:$file" |
  tokenizer -l C -o line -c
done |
mpcd -v -n 40 >results.txt
.ft P
.fi

.SH DIAGNOSTICS
None.

.SH SEE ALSO
.IR tokenizer (1)
\(em convert source code into integer vectors.

.SH AUTHORS
Written by Diomidis Spinellis.

.SH BUGS
For performance reasons no checks are made on the validity of the input
stream.
Invalid input may result in a crash.

Reported clones are regions that have the same tokens up to the specified
length,
extended to the end of the last line,
and then extended as a group line-by-line to cover as many tokens as
possible,
as long as all group members are the same.
No attempt is made to split groups into longer ones covering
differing regions.

Reported clones may overlap.
This may be a feature.
